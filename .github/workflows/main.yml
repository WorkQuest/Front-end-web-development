name: Node-CI

on:
  push:
    branches: [ master, develop ]

jobs:
  build-prod:
    if: github.ref == 'refs/heads/master'
    environment: production
    runs-on: ubuntu-18.04

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      #    - name: Export env variable
      #      run: export GMAPKEY=${{ secrets.GMAPKEY }}

      - name: Install npm dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo GMAPKEY=${{ secrets.GMAPKEY }} > .env
          echo BASE_URL=${{ secrets.BASE_URL }} >> .env
          echo STAKING_ADDRESS=${{ secrets.STAKING_ADDRESS }} >> .env
          echo LP_TOKEN=${{ secrets.LP_TOKEN }} >> .env
          echo PROD=${{ secrets.PROD }} >> .env
          echo WQT_TOKEN=${{ secrets.WQT_TOKEN }} >> .env
          echo NEW_WQT_TOKEN=${{ secrets.NEW_WQT_TOKEN }} >> .env
          echo BRIDGE_ADDRESS_RINKEBY=${{ secrets.BRIDGE_ADDRESS_RINKEBY }} >> .env
          echo BRIDGE_ADDRESS_BSCTESTNET=${{ secrets.BRIDGE_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_WQT_NEW_ADDRESS_BSCTESTNET=${{ secrets.TOKEN_WQT_NEW_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_WQT_OLD_ADDRESS_BSCTESTNET=${{ secrets.TOKEN_WQT_OLD_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_ETH_ADDRESS_BSCTESTNET=${{ secrets.TOKEN_ETH_ADDRESS_BSCTESTNET }} >> .env
          echo EXCHANGE_ADDRESS_BSCTESTNET=${{ secrets.EXCHANGE_ADDRESS_BSCTESTNET }} >> .env
          echo EXCHANGE_ADDRESS_RINKEBY=${{ secrets.EXCHANGE_ADDRESS_RINKEBY }} >> .env
          echo CAKE_LP_TOKEN=${{ secrets.CAKE_LP_TOKEN }} >> .env
          echo CAKE_WQT_TOKEN=${{ secrets.CAKE_WQT_TOKEN }} >> .env
          echo STAKING_ADDRESS_BSC=${{ secrets.STAKING_ADDRESS_BSC }} >> .env
          echo MAINNET_BSC_WQT_TOKEN=${{ secrets.MAINNET_BSC_WQT_TOKEN }} >> .env
          echo MAINNET_BSC_BRIDGE=${{ secrets.MAINNET_BSC_BRIDGE }} >> .env
          echo MAINNET_ETH_WQT_TOKEN=${{ secrets.MAINNET_ETH_WQT_TOKEN }} >> .env
          echo MAINNET_ETH_BRIDGE=${{ secrets.MAINNET_ETH_BRIDGE }} >> .env
          echo EXCHANGE_ADDRESS_BSCMAINNET=${{ secrets.EXCHANGE_ADDRESS_BSCMAINNET }} >> .env
          echo TOKEN_WQT_OLD_ADDRESS_BSCMAINNET=${{ secrets.TOKEN_WQT_OLD_ADDRESS_BSCMAINNET }} >> .env
          echo TESTNET_BSC_STAKING=${{ secrets.TESTNET_BSC_STAKING }} >> .env
          echo MAINNET_ETH_STAKING=${{ secrets.MAINNET_ETH_STAKING }} >> .env
          echo MAINNET_STAKING_ETH_LP_TOKEN=${{ secrets.MAINNET_STAKING_ETH_LP_TOKEN }} >> .env
          echo MAINNET_ETH_INFURA=${{ secrets.MAINNET_ETH_INFURA }} >> .env
          echo MAINNET_BSC_MORALIS=${{ secrets.MAINNET_BSC_MORALIS }} >> .env
          echo TOKEN_WBNB_ADDRESS=${{ secrets.TOKEN_WBNB_ADDRESS }} >> .env
          echo TOKEN_WETH_ADDRESS=${{ secrets.TOKEN_WETH_ADDRESS }} >> .env
          echo TOKEN_WBNB_AMOUNT_MAX=${{ secrets.TOKEN_WBNB_AMOUNT_MAX }} >> .env
          echo TOKEN_WETH_AMOUNT_MAX=${{ secrets.TOKEN_WETH_AMOUNT_MAX }} >> .env
          echo TOKEN_WQT_BSC_NETWORK_AMOUNT_MAX=${{ secrets.TOKEN_WQT_BSC_NETWORK_AMOUNT_MAX }} >> .env
          echo TOKEN_WQT_ETHEREUM_NETWORK_AMOUNT_MAX=${{ secrets.TOKEN_WQT_ETHEREUM_NETWORK_AMOUNT_MAX }} >> .env
      - name: Run generate static task
        run: npm run generate
                 #    env:
                 #      GMAPKEY: ${{ secrets.GMAPKEY }}
                 #      BASE_URL: ${{ secrets.BASE_URL }}
                 #      STAKING_ADDRESS: ${{ secrets.STAKING_ADDRESS }}
                 #      LP_TOKEN: ${{ secrets.LP_TOKEN }}
                 #      PROD: ${{ secrets.PROD }}
                 #      WQT_TOKEN: ${{ secrets.WQT_TOKEN }}

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

  build-develop:
    if: github.ref == 'refs/heads/develop'
    environment: develop
    runs-on: ubuntu-18.04

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      #    - name: Export env variable
      #      run: export GMAPKEY=${{ secrets.GMAPKEY }}

      - name: Install npm dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo GMAPKEY=${{ secrets.GMAPKEY }} > .env
          echo BASE_URL=${{ secrets.BASE_URL }} >> .env
          echo STAKING_ADDRESS=${{ secrets.STAKING_ADDRESS }} >> .env
          echo LP_TOKEN=${{ secrets.LP_TOKEN }} >> .env
          echo PROD=${{ secrets.PROD }} >> .env
          echo WQT_TOKEN=${{ secrets.WQT_TOKEN }} >> .env
          echo NEW_WQT_TOKEN=${{ secrets.NEW_WQT_TOKEN }} >> .env
          echo BRIDGE_ADDRESS_RINKEBY=${{ secrets.BRIDGE_ADDRESS_RINKEBY }} >> .env
          echo BRIDGE_ADDRESS_BSCTESTNET=${{ secrets.BRIDGE_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_WQT_NEW_ADDRESS_BSCTESTNET=${{ secrets.TOKEN_WQT_NEW_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_WQT_OLD_ADDRESS_BSCTESTNET=${{ secrets.TOKEN_WQT_OLD_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_ETH_ADDRESS_BSCTESTNET=${{ secrets.TOKEN_ETH_ADDRESS_BSCTESTNET }} >> .env
          echo EXCHANGE_ADDRESS_BSCTESTNET=${{ secrets.EXCHANGE_ADDRESS_BSCTESTNET }} >> .env
          echo EXCHANGE_ADDRESS_RINKEBY=${{ secrets.EXCHANGE_ADDRESS_RINKEBY }} >> .env
          echo CAKE_LP_TOKEN=${{ secrets.CAKE_LP_TOKEN }} >> .env
          echo CAKE_WQT_TOKEN=${{ secrets.CAKE_WQT_TOKEN }} >> .env
          echo STAKING_ADDRESS_BSC=${{ secrets.STAKING_ADDRESS_BSC }} >> .env
          echo MAINNET_BSC_WQT_TOKEN=${{ secrets.MAINNET_BSC_WQT_TOKEN }} >> .env
          echo MAINNET_BSC_BRIDGE=${{ secrets.MAINNET_BSC_BRIDGE }} >> .env
          echo MAINNET_ETH_WQT_TOKEN=${{ secrets.MAINNET_ETH_WQT_TOKEN }} >> .env
          echo MAINNET_ETH_BRIDGE=${{ secrets.MAINNET_ETH_BRIDGE }} >> .env
          echo EXCHANGE_ADDRESS_BSCMAINNET=${{ secrets.EXCHANGE_ADDRESS_BSCMAINNET }} >> .env
          echo TOKEN_WQT_OLD_ADDRESS_BSCMAINNET=${{ secrets.TOKEN_WQT_OLD_ADDRESS_BSCMAINNET }} >> .env
          echo TESTNET_BSC_STAKING=${{ secrets.TESTNET_BSC_STAKING }} >> .env
          echo MAINNET_STAKING_WQT_TOKEN=${{ secrets.MAINNET_STAKING_WQT_TOKEN }} >> .env
          echo MAINNET_STAKING_LP_TOKEN=${{ secrets.MAINNET_STAKING_LP_TOKEN }} >> .env
          echo MAINNET_BSC_STAKING=${{ secrets.MAINNET_BSC_STAKING }} >> .env
          echo MAINNET_ETH_STAKING=${{ secrets.MAINNET_ETH_STAKING }} >> .env
          echo MAINNET_STAKING_ETH_LP_TOKEN=${{ secrets.MAINNET_STAKING_ETH_LP_TOKEN }} >> .env
          echo MAINNET_ETH_INFURA=${{ secrets.MAINNET_ETH_INFURA }} >> .env
          echo MAINNET_BSC_MORALIS=${{ secrets.MAINNET_BSC_MORALIS }} >> .env
          echo TOKEN_WBNB_ADDRESS=${{ secrets.TOKEN_WBNB_ADDRESS }} >> .env
          echo TOKEN_WETH_ADDRESS=${{ secrets.TOKEN_WETH_ADDRESS }} >> .env
          echo TOKEN_WBNB_AMOUNT_MAX=${{ secrets.TOKEN_WBNB_AMOUNT_MAX }} >> .env
          echo TOKEN_WETH_AMOUNT_MAX=${{ secrets.TOKEN_WETH_AMOUNT_MAX }} >> .env
          echo TOKEN_WQT_BSC_NETWORK_AMOUNT_MAX=${{ secrets.TOKEN_WQT_BSC_NETWORK_AMOUNT_MAX }} >> .env
          echo TOKEN_WQT_ETHEREUM_NETWORK_AMOUNT_MAX=${{ secrets.TOKEN_WQT_ETHEREUM_NETWORK_AMOUNT_MAX }} >> .env
      - name: Run generate static task
        run: npm run generate
    #    env:
    #      GMAPKEY: ${{ secrets.GMAPKEY }}
    #      BASE_URL: ${{ secrets.BASE_URL }}
    #      STAKING_ADDRESS: ${{ secrets.STAKING_ADDRESS }}
    #      LP_TOKEN: ${{ secrets.LP_TOKEN }}
    #      PROD: ${{ secrets.PROD }}
    #      WQT_TOKEN: ${{ secrets.WQT_TOKEN }}

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
