name: Node-CI

on:
  push:
    branches: [ master, develop ]

jobs:
  build-prod:
    if: github.ref == 'refs/heads/master'
    environment: production
    runs-on: ubuntu-18.04

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      #    - name: Export env variable
      #      run: export GMAPKEY=${{ secrets.GMAPKEY }}

      - name: Install npm dependencies
        run: npm install

      - name: Run generate static task
        run: GMAPKEY=${{ secrets.GMAPKEY }} BASE_URL=${{ secrets.BASE_URL }} STAKING_ADDRESS=${{ secrets.STAKING_ADDRESS }} LP_TOKEN=${{ secrets.LP_TOKEN }} PROD=${{ secrets.PROD }} WQT_TOKEN=${{ secrets.WQT_TOKEN }} npm run generate 
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

  build-develop:
    if: github.ref == 'refs/heads/develop'
    environment: develop
    runs-on: ubuntu-18.04

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      #    - name: Export env variable
      #      run: export GMAPKEY=${{ secrets.GMAPKEY }}

      - name: Install npm dependencies
        run: npm install

      - name: Create .env file
        run: | 
          echo GMAPKEY=${{ secrets.GMAPKEY }} > .env 
          echo BASE_URL=${{ secrets.BASE_URL }} >> .env
          echo STAKING_ADDRESS=${{ secrets.STAKING_ADDRESS }} >> .env
          echo LP_TOKEN=${{ secrets.LP_TOKEN }} >> .env
          echo PROD=${{ secrets.PROD }} >> .env
          echo WQT_TOKEN=${{ secrets.WQT_TOKEN }} >> .env
          echo BRIDGE_ADDRESS_RINKEBY=${{ BRIDGE_ADDRESS_RINKEBY }} >> .env
          echo BRIDGE_ADDRESS_BSCTESTNET=${{ BRIDGE_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_WQT_NEW_ADDRESS_BSCTESTNET=${{ TOKEN_WQT_NEW_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_WQT_OLD_ADDRESS_BSCTESTNET=${{ TOKEN_WQT_OLD_ADDRESS_BSCTESTNET }} >> .env
          echo TOKEN_ETH_ADDRESS_BSCTESTNET=${{ TOKEN_ETH_ADDRESS_BSCTESTNET }} >> .env
          echo EXCHANGE_ADDRESS_BSCTESTNET=${{ EXCHANGE_ADDRESS_BSCTESTNET }} >> .env
          echo EXCHANGE_ADDRESS_RINKEBY=${{ EXCHANGE_ADDRESS_RINKEBY }} >> .env
         
      - name: Run generate static task
        run: npm run generate
    #    env: 
    #      GMAPKEY: ${{ secrets.GMAPKEY }}
    #      BASE_URL: ${{ secrets.BASE_URL }} 
    #      STAKING_ADDRESS: ${{ secrets.STAKING_ADDRESS }}
    #      LP_TOKEN: ${{ secrets.LP_TOKEN }} 
    #      PROD: ${{ secrets.PROD }} 
    #      WQT_TOKEN: ${{ secrets.WQT_TOKEN }}

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
