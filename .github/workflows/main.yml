name: Node-CI

on:
  push:
    branches: [ master, stage, develop ]

jobs:
  build-prod:
    if: github.ref == 'refs/heads/master'
    environment: production
    runs-on: ubuntu-18.04

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo PROD=${{ secrets.PROD }} >> .env
          echo BASE_URL=${{ secrets.BASE_URL }} >> .env
          echo GMAPKEY=${{ secrets.GMAPKEY }} >> .env
          echo SECRET_SUMSUB=${{ secrets.SECRET_SUMSUB }} >> .env

          echo WS_NOTIFS_URL=${{ secrets.WS_NOTIFS_URL }} >> .env
          echo WS_CHAT_URL=${{ secrets.WS_CHAT_URL }} >> .env

          echo ETHEREUM_BRIDGE=${{ secrets.ETHEREUM_BRIDGE }} >> .env
          echo ETHEREUM_LP_TOKEN=${{ secrets.ETHEREUM_LP_TOKEN }} >> .env
          echo ETHEREUM_MINING=${{ secrets.ETHEREUM_MINING }} >> .env
          echo ETHEREUM_WQT_TOKEN=${{ secrets.ETHEREUM_WQT_TOKEN }} >> .env
          echo ETHEREUM_WS_INFURA=${{ secrets.ETHEREUM_WS_INFURA }} >> .env

          echo BSC_BRIDGE=${{ secrets.BSC_BRIDGE }} >> .env
          echo BSC_LP_TOKEN=${{ secrets.BSC_LP_TOKEN }} >> .env
          echo BSC_MINING=${{ secrets.BSC_MINING }} >> .env
          echo BSC_OLD_WQT_TOKEN=${{ secrets.BSC_OLD_WQT_TOKEN }} >> .env
          echo BSC_WQT_EXCHANGE=${{ secrets.BSC_WQT_EXCHANGE }} >> .env
          echo BSC_WQT_TOKEN=${{ secrets.BSC_WQT_TOKEN }} >> .env
          echo BSC_RPC_URL=${{ secrets.BSC_RPC_URL }} >> .env
          echo BSC_WS_MORALIS=${{ secrets.BSC_WS_MORALIS }} >> .env

          echo WQT_STAKING=${{ secrets.WQT_STAKING }} >> .env
          echo WQT_STAKING_NATIVE=${{ secrets.WQT_STAKING_NATIVE }} >> .env

          echo WQ_PROVIDER=${{ secrets.WQ_PROVIDER }} >> .env
          echo WQ_EXPLORER=${{ secrets.WQ_EXPLORER }} >> .env
          echo WQT_TOKEN=${{ secrets.WQT_TOKEN }} >> .env
          echo WORK_QUEST_FACTORY=${{ secrets.WORK_QUEST_FACTORY }} >> .env

          echo WETH_TOKEN=${{ secrets.WETH_TOKEN }} >> .env
          echo WBNB_TOKEN=${{ secrets.WBNB_TOKEN }} >> .env

          echo PENSION_FUND=${{ secrets.PENSION_FUND }} >> .env

      - name: Run generate static task
        run: npm run generate

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.2.11
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

  build-stage:
    if: github.ref == 'refs/heads/stage'
    environment: stage
    runs-on: ubuntu-18.04

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo PROD=${{ secrets.PROD }} >> .env
          echo BASE_URL=${{ secrets.BASE_URL }} >> .env
          echo GMAPKEY=${{ secrets.GMAPKEY }} >> .env
          echo SECRET_SUMSUB=${{ secrets.SECRET_SUMSUB }} >> .env

          echo WS_NOTIFS_URL=${{ secrets.WS_NOTIFS_URL }} >> .env
          echo WS_CHAT_URL=${{ secrets.WS_CHAT_URL }} >> .env

          echo ETHEREUM_BRIDGE=${{ secrets.ETHEREUM_BRIDGE }} >> .env
          echo ETHEREUM_LP_TOKEN=${{ secrets.ETHEREUM_LP_TOKEN }} >> .env
          echo ETHEREUM_MINING=${{ secrets.ETHEREUM_MINING }} >> .env
          echo ETHEREUM_WQT_TOKEN=${{ secrets.ETHEREUM_WQT_TOKEN }} >> .env
          echo ETHEREUM_WS_INFURA=${{ secrets.ETHEREUM_WS_INFURA }} >> .env

          echo BSC_BRIDGE=${{ secrets.BSC_BRIDGE }} >> .env
          echo BSC_LP_TOKEN=${{ secrets.BSC_LP_TOKEN }} >> .env
          echo BSC_MINING=${{ secrets.BSC_MINING }} >> .env
          echo BSC_OLD_WQT_TOKEN=${{ secrets.BSC_OLD_WQT_TOKEN }} >> .env
          echo BSC_WQT_EXCHANGE=${{ secrets.BSC_WQT_EXCHANGE }} >> .env
          echo BSC_WQT_TOKEN=${{ secrets.BSC_WQT_TOKEN }} >> .env
          echo BSC_RPC_URL=${{ secrets.BSC_RPC_URL }} >> .env
          echo BSC_WS_MORALIS=${{ secrets.BSC_WS_MORALIS }} >> .env

          echo WQT_STAKING=${{ secrets.WQT_STAKING }} >> .env
          echo WQT_STAKING_NATIVE=${{ secrets.WQT_STAKING_NATIVE }} >> .env

          echo WETH_TOKEN=${{ secrets.WETH_TOKEN }} >> .env
          echo WBNB_TOKEN=${{ secrets.WBNB_TOKEN }} >> .env

          echo WQ_PROVIDER=${{ secrets.WQ_PROVIDER }} >> .env
          echo WQ_EXPLORER=${{ secrets.WQ_EXPLORER }} >> .env
          echo WQT_TOKEN=${{ secrets.WQT_TOKEN }} >> .env
          echo WORK_QUEST_FACTORY=${{ secrets.WORK_QUEST_FACTORY }} >> .env

          echo PENSION_FUND=${{ secrets.PENSION_FUND }} >> .env

      - name: Run generate static task
        run: npm run generate

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.2.11
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

  build-develop:
    if: github.ref == 'refs/heads/develop'
    environment: development
    runs-on: ubuntu-18.04

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo PROD=${{ secrets.PROD }} >> .env
          echo BASE_URL=${{ secrets.BASE_URL }} >> .env
          echo GMAPKEY=${{ secrets.GMAPKEY }} >> .env
          echo SECRET_SUMSUB=${{ secrets.SECRET_SUMSUB }} >> .env

          echo WS_NOTIFS_URL=${{ secrets.WS_NOTIFS_URL }} >> .env
          echo WS_CHAT_URL=${{ secrets.WS_CHAT_URL }} >> .env

          echo ETHEREUM_BRIDGE=${{ secrets.ETHEREUM_BRIDGE }} >> .env
          echo ETHEREUM_LP_TOKEN=${{ secrets.ETHEREUM_LP_TOKEN }} >> .env
          echo ETHEREUM_MINING=${{ secrets.ETHEREUM_MINING }} >> .env
          echo ETHEREUM_WQT_TOKEN=${{ secrets.ETHEREUM_WQT_TOKEN }} >> .env
          echo ETHEREUM_WS_INFURA=${{ secrets.ETHEREUM_WS_INFURA }} >> .env

          echo BSC_BRIDGE=${{ secrets.BSC_BRIDGE }} >> .env
          echo BSC_LP_TOKEN=${{ secrets.BSC_LP_TOKEN }} >> .env
          echo BSC_MINING=${{ secrets.BSC_MINING }} >> .env
          echo BSC_OLD_WQT_TOKEN=${{ secrets.BSC_OLD_WQT_TOKEN }} >> .env
          echo BSC_WQT_EXCHANGE=${{ secrets.BSC_WQT_EXCHANGE }} >> .env
          echo BSC_WQT_TOKEN=${{ secrets.BSC_WQT_TOKEN }} >> .env
          echo BSC_RPC_URL=${{ secrets.BSC_RPC_URL }} >> .env
          echo BSC_WS_MORALIS=${{ secrets.BSC_WS_MORALIS }} >> .env

          echo WQT_STAKING=${{ secrets.WQT_STAKING }} >> .env
          echo WQT_STAKING_NATIVE=${{ secrets.WQT_STAKING_NATIVE }} >> .env

          echo WQ_PROVIDER=${{ secrets.WQ_PROVIDER }} >> .env
          echo WQ_EXPLORER=${{ secrets.WQ_EXPLORER }} >> .env
          echo WQT_TOKEN=${{ secrets.WQT_TOKEN }} >> .env
          echo WORK_QUEST_FACTORY=${{ secrets.WORK_QUEST_FACTORY }} >> .env

          echo WETH_TOKEN=${{ secrets.WETH_TOKEN }} >> .env
          echo WBNB_TOKEN=${{ secrets.WBNB_TOKEN }} >> .env

          echo PENSION_FUND=${{ secrets.PENSION_FUND }} >> .env

      - name: Run generate static task
        run: npm run generate

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.2.11
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
